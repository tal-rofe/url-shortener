name: Destroy Terrafrom

on:
    workflow_dispatch:

jobs:
    destroy_terraform:
        name: Destroy Terraform
        runs-on: ubuntu-latest
        if: github.actor == 'tal-rofe'
        env:
            AWS_REGION: ${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            TF_VAR_domain_name: ${{ secrets.DOMAIN_NAME }}

        steps:
            - name: Setup Node environment
              uses: Exlint/node-environment@v1.2.6
              with:
                  should-cache: false
                  node-version: 20.11.1
                  package-manager: pnpm
                  package-manager-version: 8.15.4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Build store-url lambda function
              run: pnpm exec nx build @url-shortener/store-url

            - name: Terraform setup
              uses: hashicorp/setup-terraform@v3

            - name: Terraform core init
              working-directory: terraform/core
              env:
                  TERRAFORM_BACKEND_S3_BUCKET: ${{ secrets.TERRAFORM_BACKEND_S3_BUCKET }}
                  TERRAFORM_BACKEND_DYNAMODB_TABLE: ${{ secrets.TERRAFORM_BACKEND_DYNAMODB_TABLE }}
              run: |
                  terraform init \
                  -backend-config="bucket=$TERRAFORM_BACKEND_S3_BUCKET" \
                  -backend-config="dynamodb_table=$TERRAFORM_BACKEND_DYNAMODB_TABLE" \
                  -backend-config="region=$AWS_REGION"

            - name: Terraform core destroy
              working-directory: terraform/core
              run: terraform destroy -auto-approve
